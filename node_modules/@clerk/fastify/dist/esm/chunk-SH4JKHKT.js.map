{"version":3,"sources":["../../src/utils.ts"],"sourcesContent":["import type { FastifyRequest } from 'fastify';\n\nexport const fastifyRequestToRequest = (req: FastifyRequest): Request => {\n  const headers = new Headers(\n    Object.keys(req.headers).reduce((acc, key) => {\n      const value = req.headers[key];\n      if (!value) {\n        return acc;\n      }\n\n      if (typeof value === 'string') {\n        acc.set(key, value);\n      } else {\n        acc.set(key, value.join(','));\n      }\n      return acc;\n    }, new Headers()),\n  );\n\n  // Making some manual tests it seems that FastifyRequest populates the req protocol / hostname\n  // based on the forwarded headers. Nevertheless, we are gonna use a dummy base and the request\n  // will be fixed by the internals of the clerk/backend package\n  const dummyOriginReqUrl = new URL(req.url || '', `${req.protocol}://clerk-dummy`);\n  return new Request(dummyOriginReqUrl, {\n    method: req.method,\n    headers,\n  });\n};\n"],"mappings":"AAEO,IAAMA,EAA2BC,GAAiC,CACvE,IAAMC,EAAU,IAAI,QAClB,OAAO,KAAKD,EAAI,OAAO,EAAE,OAAO,CAACE,EAAKC,IAAQ,CAC5C,IAAMC,EAAQJ,EAAI,QAAQG,CAAG,EAC7B,OAAKC,IAID,OAAOA,GAAU,SACnBF,EAAI,IAAIC,EAAKC,CAAK,EAElBF,EAAI,IAAIC,EAAKC,EAAM,KAAK,GAAG,CAAC,GAEvBF,CACT,EAAG,IAAI,OAAS,CAClB,EAKMG,EAAoB,IAAI,IAAIL,EAAI,KAAO,GAAI,GAAGA,EAAI,QAAQ,gBAAgB,EAChF,OAAO,IAAI,QAAQK,EAAmB,CACpC,OAAQL,EAAI,OACZ,QAAAC,CACF,CAAC,CACH","names":["fastifyRequestToRequest","req","headers","acc","key","value","dummyOriginReqUrl"]}