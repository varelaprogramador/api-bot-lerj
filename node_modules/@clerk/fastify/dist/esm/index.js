import{a as p}from"./chunk-SH4JKHKT.js";export*from"@clerk/backend";import O from"fastify-plugin";var c=["onRequest","preHandler"];import{AuthStatus as _}from"@clerk/backend/internal";import{createClerkClient as K}from"@clerk/backend";import{constants as d}from"@clerk/backend/internal";import{apiUrlFromPublishableKey as R}from"@clerk/shared/apiUrlFromPublishableKey";var f=process.env.CLERK_API_VERSION||"v1",i=process.env.CLERK_SECRET_KEY||"",a=process.env.CLERK_PUBLISHABLE_KEY||"",l=process.env.CLERK_API_URL||R(a),u=process.env.CLERK_JWT_KEY||"",m={name:"@clerk/fastify",version:"2.2.20",environment:"production"},{Cookies:q,Headers:y}=d;var n=K({secretKey:i,apiUrl:l,apiVersion:f,jwtKey:u,userAgent:"@clerk/fastify@2.2.20",sdkMetadata:m});var E=e=>async(t,o)=>{let r=p(t),s=await n.authenticateRequest(r,{...e,secretKey:e.secretKey||i,publishableKey:e.publishableKey||a});if(s.headers.forEach((k,A)=>o.header(A,k)),s.headers.get(y.Location))return o.code(307).send();if(s.status===_.Handshake)throw new Error("Clerk: handshake status without redirect");t.auth=s.toAuth()};var g=(e,t,o)=>{e.decorateRequest("auth",null);let r=t.hookName||"preHandler";if(!c.includes(r))throw new Error(`Unsupported hookName: ${r}`);e.addHook(r,E(t)),o()},F=O(g,{name:"@clerk/fastify",fastify:"5.x"});var x=e=>`\u{1F512} Clerk: ${e.trim()}

For more info, check out the docs: https://clerk.com/docs,
or come say hi in our discord server: https://clerk.com/discord
`,h=x(`The "clerkPlugin" should be registered before using the "getAuth".
Example:

import { clerkPlugin } from '@clerk/fastify';

const server: FastifyInstance = Fastify({ logger: true });
server.register(clerkPlugin);
`);var L=e=>{let t=e;if(!t.auth)throw new Error(h);return t.auth};export{n as clerkClient,F as clerkPlugin,L as getAuth};
//# sourceMappingURL=index.js.map